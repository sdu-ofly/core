<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ofly.core.admin.dao.IResourcesDao">
	<select id="queryResources" resultType="com.ofly.core.admin.vo.TreeNode">
		select 
			a.*,
		    if((SELECT 
		            COUNT(1)
		        FROM
		            sec_resources b
		        WHERE
		            a.id = b.parent_id) = 0,0,1 )  is_Parent 
		FROM
    		sec_resources a
		where 
			a.type='01'
		<if test="parentId==null">
			and isnull(a.parent_id)
		</if>
		<if test="parentId!=null">
			and a.parent_id = #{parentId}
		</if>
	</select>
	<select id="queryResourceByprimaryKey" resultType="com.ofly.core.admin.vo.ResourceVo">
		select * from sec_resources where id = #{id}
	</select>
	<insert id="saveResourcesNode" parameterType="com.ofly.core.admin.vo.TreeNode">
		INSERT INTO  sec_resources 
			(parent_id, name) 
		VALUES 
			(#{parentId}, #{name})
	</insert>
	<insert id="saveResource" parameterType="com.ofly.core.admin.vo.ResourceVo">
		INSERT INTO  sec_resources 
			(parent_id, name, url,type,is_menu,auth) 
		VALUES 
			(#{parentId}, #{name},#{url},'02',#{isMenu},#{auth})
	</insert>
	<update id="updateResource" parameterType="com.ofly.core.admin.vo.ResourceVo">
		UPDATE 
			sec_resources 
		SET 
			name	= #{name},
			url 	= #{url},
			is_Menu	= #{isMenu},
			auth	= #{auth}
		WHERE 
			id=#{id}
	</update>
	<update id="updateResourcesNode" parameterType="com.ofly.core.admin.vo.TreeNode">
		UPDATE 
			sec_resources 
		SET 
			name=#{name}
		WHERE 
			id=#{id}
	</update>
	<select id="hasResourcesChildNode" resultType="int">
		select 
			count(1) 
		from 
			sec_resources
		where 
			parent_id = #{id}
	</select>
	<delete id="deleteResourcesNode">
		delete from 
			sec_resources
		where 
			id = #{id}
	</delete>
	<delete id="deleteResource">
		delete from
			sec_resources
		where
			id in 
			<foreach collection="ids" open="(" close=")" separator="," item="item">
				#{item}
			</foreach>
	</delete>
	<select id="queryList" parameterType="map" resultType="com.ofly.core.admin.vo.ResourceVo">
		SELECT 
		    *
		FROM
		    sec_resources
		WHERE
		    parent_id = #{parentId}
		AND
			type = '02'
		AND (
			name LIKE CONCAT('%', #{condition}, '%')
		OR 
			url LIKE CONCAT('%', #{condition}, '%')
		 )
		<if test="rows!=null and offset!=null">
        limit #{offset}, #{rows}
        </if>
	</select>
	<select id="queryListNum" parameterType="map" resultType="int">
		SELECT 
		    count(1)
		FROM
		    sec_resources
		WHERE
		    parent_id = #{parentId}
		AND
			type = '02'
		AND (
			name LIKE CONCAT('%', #{condition}, '%')
		OR 
			url LIKE CONCAT('%', #{condition}, '%')
		 )
	</select>
	<select id="queryExistResourceList" parameterType="map" resultType="com.ofly.core.admin.vo.RoleResRelaVo">
		SELECT 
		    b.*,
		    c.role_res_rela_id
		FROM
		    sec_roles a,
		    sec_resources b,
		    sec_role_resource_rela c
		WHERE
		    a.id = c.role_id
		AND b.id = c.resource_id
		AND a.id=#{roleId}
		<if test="condition!=null and condition!=''">
		AND (
			b.name LIKE CONCAT('%', #{condition}, '%')
		OR 
			b.url LIKE CONCAT('%', #{condition}, '%')
		 )
		</if>
		<if test="rows!=null and offset!=null">
        limit #{offset}, #{rows}
        </if>
	</select>
	<select id="queryExistResourceListNum"  parameterType="map" resultType="int">
		SELECT 
		    count(1)
		FROM
		    sec_roles a,
		    sec_resources b,
		    sec_role_resource_rela c
		WHERE
		    a.id = c.role_id
		AND b.id = c.resource_id
		AND a.id=#{roleId}
		<if test="condition!=null and condition!=''">
		AND (
			b.name LIKE CONCAT('%', #{condition}, '%')
		OR 
			b.url LIKE CONCAT('%', #{condition}, '%')
		 )
		</if>
	</select>
	<delete id="deleteRelaResource">
		delete from
			sec_role_resource_rela
		where
			role_res_rela_id in 
			<foreach collection="ids" open="(" close=")" separator="," item="item">
				#{item}
			</foreach>
	</delete>
	<select id="queryUnUseResourceList" parameterType="map" resultType="com.ofly.core.admin.vo.ResourceVo">
		SELECT 
		    d.*
		FROM
		    sec_resources d
		WHERE
		    d.parent_id = #{parentId}
		AND 
			d.type = '02'
        AND d.id NOT IN (SELECT 
	            b.id
	        FROM
	            sec_roles a,
	            sec_resources b,
	            sec_role_resource_rela c
	        WHERE
	            a.id = #{roleId} 
	        AND a.id = c.role_id
	        AND b.id = c.resource_id)
	   <if test="rows!=null and offset!=null">
        limit #{offset}, #{rows}
       </if>
	</select>
	<select id="queryUnUseResourceListNum" parameterType="map" resultType="int">
		SELECT 
		    count(1)
		FROM
		    sec_resources d
		WHERE
		    d.parent_id = #{parentId}
		AND 
			d.type = '02'
        AND d.id NOT IN (SELECT 
	            b.id
	        FROM
	            sec_roles a,
	            sec_resources b,
	            sec_role_resource_rela c
	        WHERE
	            a.id = #{roleId} 
	        AND a.id = c.role_id
	        AND b.id = c.resource_id)
	</select>
	<insert id="batchInsertRoleResRela">
		insert into sec_role_resource_rela
			(role_id, resource_id)
		values
		<foreach collection="arr" item="item" separator=",">
			(#{item.roleId},#{item.resourceId})
		</foreach>
	</insert>
</mapper>